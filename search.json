[{"path":"https://mlverse.github.io/hfhub/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 hfhub authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mlverse.github.io/hfhub/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Falbel. Author, maintainer. Regouby Christophe. Contributor. Posit. Copyright holder.","code":""},{"path":"https://mlverse.github.io/hfhub/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Falbel D (2024). hfhub: Hugging Face Hub Interface. R package version 0.1.1.9000, https://mlverse.github.io/hfhub/.","code":"@Manual{,   title = {hfhub: Hugging Face Hub Interface},   author = {Daniel Falbel},   year = {2024},   note = {R package version 0.1.1.9000},   url = {https://mlverse.github.io/hfhub/}, }"},{"path":"https://mlverse.github.io/hfhub/index.html","id":"hfhub","dir":"","previous_headings":"","what":"Hugging Face Hub Interface","title":"Hugging Face Hub Interface","text":"hfhub minimal port huggingface_hub allows downloading files Hugging Face Hub caching structure used original implementation.","code":""},{"path":"https://mlverse.github.io/hfhub/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Hugging Face Hub Interface","text":"hfhub can installed CRAN : can install development version hfhub like :","code":"install.packages(\"hfhub\") remotes::install_github(\"mlverse/hfhub\")"},{"path":"https://mlverse.github.io/hfhub/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Hugging Face Hub Interface","text":"hub_download exported function package can used download cache file Hugging Face Hub repository. returns path file.","code":"library(hfhub) path <- hub_download(\"gpt2\", \"config.json\") str(jsonlite::fromJSON(path))"},{"path":"https://mlverse.github.io/hfhub/index.html","id":"authentication","dir":"","previous_headings":"","what":"Authentication","title":"Hugging Face Hub Interface","text":"can set HUGGING_FACE_HUB_TOKEN environment variable value token obtained Access Token section Hugging Face account setting page. allow download private files Hugging Face Hub.","code":""},{"path":"https://mlverse.github.io/hfhub/reference/WEIGHTS_NAME.html","id":null,"dir":"Reference","previous_headings":"","what":"Weight file names in HUB — WEIGHTS_NAME","title":"Weight file names in HUB — WEIGHTS_NAME","text":"Weight file names HUB","code":""},{"path":"https://mlverse.github.io/hfhub/reference/WEIGHTS_NAME.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weight file names in HUB — WEIGHTS_NAME","text":"","code":"WEIGHTS_NAME()  WEIGHTS_INDEX_NAME()"},{"path":"https://mlverse.github.io/hfhub/reference/WEIGHTS_NAME.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weight file names in HUB — WEIGHTS_NAME","text":"string default file names indexes Hugging Face Hub.","code":""},{"path":"https://mlverse.github.io/hfhub/reference/WEIGHTS_NAME.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Weight file names in HUB — WEIGHTS_NAME","text":"WEIGHTS_NAME(): Name weights file WEIGHTS_INDEX_NAME(): Name weights index file","code":""},{"path":"https://mlverse.github.io/hfhub/reference/WEIGHTS_NAME.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weight file names in HUB — WEIGHTS_NAME","text":"","code":"WEIGHTS_NAME() #> [1] \"pytorch_model.bin\" WEIGHTS_INDEX_NAME() #> [1] \"pytorch_model.bin.index.json\""},{"path":"https://mlverse.github.io/hfhub/reference/hub_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads files from HuggingFace repositories — hub_download","title":"Downloads files from HuggingFace repositories — hub_download","text":"Downloads files HuggingFace repositories","code":""},{"path":"https://mlverse.github.io/hfhub/reference/hub_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads files from HuggingFace repositories — hub_download","text":"","code":"hub_download(   repo_id,   filename,   ...,   revision = \"main\",   repo_type = \"model\",   local_files_only = FALSE,   force_download = FALSE )"},{"path":"https://mlverse.github.io/hfhub/reference/hub_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads files from HuggingFace repositories — hub_download","text":"repo_id repository identifier, eg \"bert-base-uncased\" \"deepset/sentence_bert\". filename Filename download repository. Example \"config.json\". ... currenytly unused. revision Revision (branch, tag commitid) download file . repo_type type repository. Currently \"model\" supported. local_files_only use cached files? force_download re-downloading files cached.","code":""},{"path":"https://mlverse.github.io/hfhub/reference/hub_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads files from HuggingFace repositories — hub_download","text":"file path downloaded cached file. snapshot path returned attribute.","code":""},{"path":"https://mlverse.github.io/hfhub/reference/hub_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads files from HuggingFace repositories — hub_download","text":"","code":"try({ withr::with_envvar(c(HUGGINGFACE_HUB_CACHE = tempdir()), { path <- hub_download(\"gpt2\", \"config.json\") print(path) str(jsonlite::fromJSON(path)) }) }) #> /tmp/RtmpY0ugm7/models--gpt2/snapshots/607a30d783dfa663caf39e06633721c8d4cfcd7e/config.json #> List of 22 #>  $ activation_function   : chr \"gelu_new\" #>  $ architectures         : chr \"GPT2LMHeadModel\" #>  $ attn_pdrop            : num 0.1 #>  $ bos_token_id          : int 50256 #>  $ embd_pdrop            : num 0.1 #>  $ eos_token_id          : int 50256 #>  $ initializer_range     : num 0.02 #>  $ layer_norm_epsilon    : num 1e-05 #>  $ model_type            : chr \"gpt2\" #>  $ n_ctx                 : int 1024 #>  $ n_embd                : int 768 #>  $ n_head                : int 12 #>  $ n_layer               : int 12 #>  $ n_positions           : int 1024 #>  $ resid_pdrop           : num 0.1 #>  $ summary_activation    : NULL #>  $ summary_first_dropout : num 0.1 #>  $ summary_proj_to_labels: logi TRUE #>  $ summary_type          : chr \"cls_index\" #>  $ summary_use_proj      : logi TRUE #>  $ task_specific_params  :List of 1 #>   ..$ text-generation:List of 2 #>   .. ..$ do_sample : logi TRUE #>   .. ..$ max_length: int 50 #>  $ vocab_size            : int 50257"},{"path":"https://mlverse.github.io/hfhub/reference/hub_repo_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Queries information about Hub repositories — hub_repo_info","title":"Queries information about Hub repositories — hub_repo_info","text":"Queries information Hub repositories","code":""},{"path":"https://mlverse.github.io/hfhub/reference/hub_repo_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Queries information about Hub repositories — hub_repo_info","text":"","code":"hub_repo_info(   repo_id,   ...,   repo_type = NULL,   revision = NULL,   files_metadata = FALSE )  hub_dataset_info(repo_id, ..., revision = NULL, files_metadata = FALSE)"},{"path":"https://mlverse.github.io/hfhub/reference/hub_repo_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Queries information about Hub repositories — hub_repo_info","text":"repo_id repository identifier, eg \"bert-base-uncased\" \"deepset/sentence_bert\". ... currenytly unused. repo_type type repository. Currently \"model\" supported. revision Revision (branch, tag commitid) download file . files_metadata Obtain files metadata information querying repository information.","code":""},{"path":"https://mlverse.github.io/hfhub/reference/hub_repo_info.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Queries information about Hub repositories — hub_repo_info","text":"hub_dataset_info(): Query information Hub Dataset","code":""},{"path":"https://mlverse.github.io/hfhub/reference/hub_snapshot.html","id":null,"dir":"Reference","previous_headings":"","what":"Snapshot the entire repository — hub_snapshot","title":"Snapshot the entire repository — hub_snapshot","text":"Downloads stores files Hugging Face Hub repository.","code":""},{"path":"https://mlverse.github.io/hfhub/reference/hub_snapshot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Snapshot the entire repository — hub_snapshot","text":"","code":"hub_snapshot(   repo_id,   ...,   revision = \"main\",   repo_type = \"model\",   local_files_only = FALSE,   force_download = FALSE,   allow_patterns = NULL,   ignore_patterns = NULL )"},{"path":"https://mlverse.github.io/hfhub/reference/hub_snapshot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Snapshot the entire repository — hub_snapshot","text":"repo_id repository identifier, eg \"bert-base-uncased\" \"deepset/sentence_bert\". ... currenytly unused. revision Revision (branch, tag commitid) download file . repo_type type repository. Currently \"model\" supported. local_files_only use cached files? force_download re-downloading files cached. allow_patterns character vector containing patters used filter allowed files snapshot. ignore_patterns character vector contaitning patterns reject files downloaded.","code":""},{"path":"https://mlverse.github.io/hfhub/news/index.html","id":"hfhub-development-version","dir":"Changelog","previous_headings":"","what":"hfhub (development version)","title":"hfhub (development version)","text":"Added FR translation R messages. (#8 @cregouby)","code":""},{"path":"https://mlverse.github.io/hfhub/news/index.html","id":"hfhub-011","dir":"Changelog","previous_headings":"","what":"hfhub 0.1.1","title":"hfhub 0.1.1","text":"CRAN release: 2023-08-18 Added NEWS.md file track changes package. Added hub_snapshot alllow downloading entire repository (#2). Added support authentication using HUGGING_FACE_HUB_TOKEN. (#5)","code":""}]
